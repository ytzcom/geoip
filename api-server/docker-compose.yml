services:
  geoip-api:
    build: .
    image: ytzcom/geoip-api:latest
    container_name: geoip-api
    restart: unless-stopped
    ports:
      - "${PORT:-8080}:8080"
    environment:
      # API Configuration
      - API_KEYS=${API_KEYS}
      
      # Download Configuration
      - USE_S3_URLS=${USE_S3_URLS:-true}  # Use S3 URLs for scalability
      
      # S3 Configuration (required when USE_S3_URLS=true)
      - S3_BUCKET=${S3_BUCKET:-ytz-geoip}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - URL_EXPIRY_SECONDS=${URL_EXPIRY_SECONDS:-3600}
      
      # Database Storage Configuration (always required)
      - DATABASE_PATH=/data/databases
      
      # Query and Caching Configuration
      - CACHE_TYPE=${CACHE_TYPE:-memory}
      - REDIS_URL=${REDIS_URL}
      - CACHE_TTL=${CACHE_TTL}
      - QUERY_RATE_LIMIT=${QUERY_RATE_LIMIT:-50}
      
      # Session Configuration
      - SESSION_SECRET_KEY=${SESSION_SECRET_KEY:-change-me-in-production}
      
      # Database Update Configuration
      - DATABASE_UPDATE_SCHEDULE=${DATABASE_UPDATE_SCHEDULE:-0 4 * * 1}
      
      # Server Configuration
      - WORKERS=${WORKERS:-1}
      - DEBUG=${DEBUG:-false}
      
      # Admin Configuration
      - ENABLE_ADMIN=${ENABLE_ADMIN:-false}
      - ADMIN_KEY=${ADMIN_KEY}
      
      # Logging
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    
    volumes:
      # Volume for database persistence (read-write for updates)
      - geoip-databases:/data/databases
    
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health').raise_for_status()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional Redis service for caching (uncomment to enable)
  # redis:
  #   image: redis:7-alpine
  #   container_name: geoip-redis
  #   restart: unless-stopped
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis-data:/data
  #   command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru

volumes:
  geoip-databases:
    driver: local
  # redis-data:
  #   driver: local