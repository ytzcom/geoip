# Local development configuration with file serving
services:
  geoip-api:
    build: .
    image: ytzcom/geoip-api:latest
    container_name: geoip-api-local
    restart: unless-stopped
    ports:
      - "${PORT:-8080}:8080"
    environment:
      # API Configuration
      - API_KEYS=${API_KEYS:-dev-key-1,dev-key-2}
      
      # Download Configuration - Serve files directly in local development
      - USE_S3_URLS=${USE_S3_URLS:-false}
      
      # Database Storage Configuration
      - DATABASE_PATH=/data/databases
      
      # Query and Caching Configuration
      - CACHE_TYPE=${CACHE_TYPE:-memory}
      - REDIS_URL=${REDIS_URL}
      - CACHE_TTL=${CACHE_TTL}
      - QUERY_RATE_LIMIT=${QUERY_RATE_LIMIT:-50}
      
      # Session Configuration
      - SESSION_SECRET_KEY=${SESSION_SECRET_KEY:-dev-secret-key-change-in-production}
      
      # Database Update Configuration
      - DATABASE_UPDATE_SCHEDULE=${DATABASE_UPDATE_SCHEDULE:-0 4 * * 1}
      
      # Server Configuration
      - WORKERS=1
      - DEBUG=${DEBUG:-true}
      
      # Admin Configuration
      - ENABLE_ADMIN=true
      - ADMIN_KEY=${ADMIN_KEY:-admin-dev-key}
      
      # Logging
      - LOG_LEVEL=${LOG_LEVEL:-DEBUG}
    
    volumes:
      # Mount local GeoIP database directory
      # Update this path to point to your actual GeoIP database files  
      - ${DATABASE_PATH:-../../temp}:/data/databases:ro
      
      # Mount source code for hot reload in debug mode
      - ./app.py:/app/app.py:ro
      - ./config.py:/app/config.py:ro
    
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health').raise_for_status()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"