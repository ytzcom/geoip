# Production configuration with S3 backend and reverse proxy
services:
  geoip-api:
    image: ytzcom/geoip-api-nginx:latest
    container_name: geoip-api
    restart: always
    expose:
      - "8080"
    environment:
      # API Configuration
      - API_KEYS=${API_KEYS}
      
      # Storage Configuration - S3 mode for production
      - STORAGE_MODE=s3
      
      # S3 Configuration
      - S3_BUCKET=${S3_BUCKET:-ytz-geoip}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - URL_EXPIRY_SECONDS=${URL_EXPIRY_SECONDS:-3600}
      
      # Server Configuration
      - WORKERS=${WORKERS:-4}
      - DEBUG=false
      
      # Admin Configuration
      - ENABLE_ADMIN=${ENABLE_ADMIN:-true}
      - ADMIN_KEY=${ADMIN_KEY}
      
      # Logging
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health').raise_for_status()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    networks:
      - geoip-network
    
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "10"
  
  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: geoip-nginx
    restart: always
    ports:
      - "${EXTERNAL_PORT:-80}:80"
      - "${EXTERNAL_SSL_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx-cache:/var/cache/nginx
    depends_on:
      - geoip-api
    networks:
      - geoip-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  geoip-network:
    driver: bridge

volumes:
  nginx-cache: